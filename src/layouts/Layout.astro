---
import '../styles/global.css';

export interface Props {
  title: string;
  description?: string;
  image?: string;
}

const { title, description = "Your Public Knowledge Garden - Technical notes, cheat sheets, and learning paths", image } = Astro.props;
---

<!DOCTYPE html>
<html lang="en" class="scroll-smooth">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <title>{title}</title>
    
    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    {image && <meta property="og:image" content={image} />}
    <meta property="og:type" content="website" />
    
    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    {image && <meta name="twitter:image" content={image} />}
  </head>
  <body class="min-h-screen bg-gray-50 dark:bg-dark-900">
    <div class="flex min-h-screen">
      <!-- Sidebar -->
      <aside class="hidden lg:flex lg:w-64 lg:flex-col lg:fixed lg:inset-y-0">
        <div class="flex flex-col flex-grow bg-white dark:bg-dark-800 pt-5 pb-4 overflow-y-auto border-r border-gray-200 dark:border-dark-700">
          <div class="flex items-center flex-shrink-0 px-4">
            <h1 class="text-xl font-bold text-gray-900 dark:text-white">
              üìö DevNotes
            </h1>
          </div>
          <nav class="mt-8 flex-1 px-2 space-y-1">
            <a href="/" class="group flex items-center px-2 py-2 text-sm font-medium rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-300 dark:hover:text-white dark:hover:bg-dark-700">
              üè† Home
            </a>
            <a href="/notes" class="group flex items-center px-2 py-2 text-sm font-medium rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-300 dark:hover:text-white dark:hover:bg-dark-700">
              üìù All Notes
            </a>
            <a href="/til" class="group flex items-center px-2 py-2 text-sm font-medium rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-300 dark:hover:text-white dark:hover:bg-dark-700">
              üí° Today I Learned
            </a>
            <a href="/progress" class="group flex items-center px-2 py-2 text-sm font-medium rounded-md text-gray-600 hover:text-gray-900 hover:bg-gray-50 dark:text-gray-300 dark:hover:text-white dark:hover:bg-dark-700">
              üìä Progress Tracker
            </a>
          </nav>
        </div>
      </aside>

      <!-- Main content -->
      <div class="lg:pl-64 flex flex-col flex-1">
        <!-- Top navigation -->
        <header class="bg-white dark:bg-dark-800 shadow-sm border-b border-gray-200 dark:border-dark-700">
          <div class="flex items-center justify-between px-4 py-4 sm:px-6 lg:px-8">
            <div class="flex items-center">
              <button type="button" class="lg:hidden p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-dark-700">
                <span class="sr-only">Open sidebar</span>
                <svg class="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 6h16M4 12h16M4 18h16" />
                </svg>
              </button>
              <h1 class="text-lg font-semibold text-gray-900 dark:text-white ml-2 lg:ml-0">
                {title}
              </h1>
            </div>
            
            <div class="flex items-center space-x-4">
              <!-- Search -->
              <div class="relative">
                <input type="text" placeholder="Search notes..." class="search-input w-64" id="search-input">
                <div class="absolute inset-y-0 right-0 pr-3 flex items-center pointer-events-none">
                  <svg class="h-5 w-5 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z" />
                  </svg>
                </div>
              </div>
              
              <!-- Dark mode toggle -->
              <button type="button" class="p-2 rounded-md text-gray-400 hover:text-gray-500 hover:bg-gray-100 dark:hover:bg-dark-700" id="theme-toggle">
                <span class="sr-only">Toggle dark mode</span>
                <svg class="h-6 w-6 hidden dark:block" fill="none" viewBox="0 0 24 24" stroke="currentColor" id="sun-icon">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 3v1m0 16v1m9-9h-1M4 12H3m15.364 6.364l-.707-.707M6.343 6.343l-.707-.707m12.728 0l-.707.707M6.343 17.657l-.707.707M16 12a4 4 0 11-8 0 4 4 0 018 0z" />
                </svg>
                <svg class="h-6 w-6 block dark:hidden" fill="none" viewBox="0 0 24 24" stroke="currentColor" id="moon-icon">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21a9.003 9.003 0 008.354-5.646z" />
                </svg>
              </button>
            </div>
          </div>
        </header>

        <!-- Page content -->
        <main class="flex-1">
          <slot />
        </main>
      </div>
    </div>

    <script>
      // Dark mode toggle
      const themeToggle = document.getElementById('theme-toggle');
      const sunIcon = document.getElementById('sun-icon');
      const moonIcon = document.getElementById('moon-icon');
      
      // Check for saved theme preference or default to light mode
      const currentTheme = localStorage.getItem('theme') || 'light';
      document.documentElement.classList.toggle('dark', currentTheme === 'dark');
      
      themeToggle?.addEventListener('click', () => {
        const isDark = document.documentElement.classList.toggle('dark');
        localStorage.setItem('theme', isDark ? 'dark' : 'light');
      });
      
      // Search functionality
      const searchInput = document.getElementById('search-input') as HTMLInputElement;
      searchInput?.addEventListener('input', (e) => {
        const query = (e.target as HTMLInputElement).value.toLowerCase();
        // TODO: Implement search functionality
        console.log('Searching for:', query);
      });
    </script>
  </body>
</html> 